name: 'Desktop'

env:
  NODE_VERSION: 18

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: environment
      node_version:
        default: 18
        description: 'Node Version'
        required: true
        type: number
      version:
        description: 'Version'
        required: true
        type: string
      

jobs:
  constructor:
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.constructor.outputs.result }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              body: 'View the assets bundled below to find a suitable installer for your host system',
              configPath: 'desktop/tauri.conf.json',
              draft: true,
              name: `Proton v${process.env.PACKAGE_VERSION}`,
              owner: context.repo.owner,
              prerelease: true,
              repo: context.repo.repo,
              tag_name: `proton-v${process.env.PACKAGE_VERSION}`
            })
            return data.id
  builder:
    needs: constructor
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-20.04, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: rust (stable)
        uses: dtolnay/rust-toolchain@stable
      - name: langspace
        run: cargo xtask setup
      - name: configure environment (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: cargo xtask --desktop setup ubuntu
      - run: cargo xtask compile
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.constructor.outputs.release_id }}
  pre-release:
    needs: [ builder, constructor ]
    runs-on: ubuntu-20.04
    steps:
      - name: publish pre-release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.constructor.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              configPath: 'desktop/tauri.conf.json',
              draft: false,
              prerelease: true,
              owner: context.repo.owner,
              release_id: process.env.release_id,
              repo: context.repo.repo
            })
